# Required sections, should be self-explanatory.
name: Circles
author: Circles-team
category: web
description: |
  Welcome to the Circles CTF challenge for the 2025 CSESoc/DevSoc/SecSoc CTF!!!
  Your mission is to find two secret pieces of text. Combine them in order (Piece 1 then Piece 2) to form the final flag: `RCR{[Piece1][Piece2]}`.
  For example, if the first piece is ICouldEatLike the second piece is 100McNuggets then the final flag is: `RCR{ICouldEatLike100McNuggets}``.
  ## Part 1: The Writing's on the Wall
  The first piece of the flag is hiding in plain sight, almost on every page of circles. If you're careful and detail-oriented, you'll find it.
  ## Part 2: BOTS0101 - Stop Bots from taking our jobs
  Today's tech landscape is a freaky one, with a lot of automation going around. Websites often have a guide for web crawlers (like Googlebot) telling them which areas to avoid. But you're not a web crawler, you're a human (surely), and you can totally avoid it for us.

value: 100
type: standard

# Specifies flag(s) for this challenge.
# You must provide at least one.
flags:
  - RCR{Th1s_1s_P4rt_0n3_And_H3r3_1s_P4rt_Tw0} # A static, case-sensitive flag.

# Specifies hints that are used to give players a way to buy or have suggestions.
# They are not required but are encouraged to keep players engaged.
# hints:
#     - This hint is free
#     - content: This hint costs points
#       cost: 10

# Specifies files that will be accessible for this challenge during a CTF.
# Paths are relative to the directory this file is in.
# files:
#    - src/challenge.c

# Specifies the maximum number of attempts a participant can submit attempts.
# attempts: 5

# Provides instructions on how to connect to a challenge.
# If your challenge requires hosting, leave this be so the Projects team can play around with it.
connection_info: https://circles.devsoc.app

# Specifies additional metadata for custom challenge types.
# The section below is a commented example of the metadata for a dynamically scored challenge.
# If you wish to make your challenge dynamic, set the type to `dynamic` and uncomment below.
# extra:
#     initial: 500
#     decay: 100
#     minimum: 50

# Requirements are used to make a challenge require another challenge to be solved before being available.
# requirements:
#     - netcat

# Specifies what version of the challenge specification was used.
# Subject to change until ctfcli v1.0.0
version: "0.1"
